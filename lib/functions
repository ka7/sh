# .sh/lib/functions 20151231 - 20210316
# Copyright (C) 1995-2021 Mark Constable <markc@renta.net> (AGPL-3.0)

if [[ -f /etc/alpine-release ]]; then
    sc () {
        if [ $1 = 'enable' ]; then
            $SUDO rc-update add $2;
        elif [ $1 = 'disable' ]; then
            $SUDO rc-update del $2;
        else
            $SUDO rc-service $2 $1;
        fi
    }
else
    sc () { $SUDO systemctl $1 $2; }
fi

chktime ()
{
    [[ $(($(stat -c %X $1)+$2)) < $(date +%s) ]] && return 0 || return 1;
}
f ()
{
    find . -type f -iname '*'$*'*' -ls;
}
gethost ()
{
    echo "\
ADMIN='$ADMIN'
AHOST='$AHOST'
AMAIL='$AMAIL'
ANAME='$ANAME'
APASS='$APASS'
A_GID='$A_GID'
A_UID='$A_UID'
BPATH='$BPATH'
CIMAP='$CIMAP'
CSMTP='$CSMTP'
C_DNS='$C_DNS'
C_FPM='$C_FPM'
C_SQL='$C_SQL'
C_SSL='$C_SSL'
C_WEB='$C_WEB'
DBMYS='$DBMYS'
DBSQL='$DBSQL'
DHOST='$DHOST'
DNAME='$DNAME'
DPASS='$DPASS'
DPATH='$DPATH'
DPORT='$DPORT'
DTYPE='$DTYPE'
DUSER='$DUSER'
EPASS='$EPASS'
EXMYS='$EXMYS'
EXSQL='$EXSQL'
HNAME='$HNAME'
HDOMN='$HDOMN'
IP4_0='$IP4_0'
LROOT='$LROOT'
MHOST='$MHOST'
MPATH='$MPATH'
OSMIR='$OSMIR'
OSREL='$OSREL'
SQCMD='$SQCMD'
SQDNS='$SQDNS'
TAREA='$TAREA'
TCITY='$TCITY'
UPASS='$UPASS'
UPATH='$UPATH'
UUSER='$UUSER'
U_GID='$U_GID'
U_SHL='$U_SHL'
U_UID='$U_UID'
VHOST='$VHOST'
VPATH='$VPATH'
VUSER='$VUSER'
V_PHP='$V_PHP'
WPASS='$WPASS'
WPATH='$WPATH'
WPUSR='$WPUSR'
WUGID='$WUGID'";
}
getusers ()
{
    getent passwd | awk -F: '{if ($3 > 999 && $3 < 65534) print}';
}
getuser ()
{
    echo "\
UUSER=$UUSER
U_UID=$U_UID
U_GID=$U_GID
VHOST=$VHOST
UPATH=$UPATH
U_SHL=$U_SHL";
}
go2 ()
{
    if [[ $1 =~ "@" ]]; then
        cd /home/u/${1#*@}*/home/*${1%@*};
    else
        cd /home/u/$1*/var/www;
    fi
}
grepuser ()
{
    getusers | grep -E "$1[,:]";
}
newuid ()
{
    local uid=$(( $(getusers | cut -d: -f3 | sort -n | tail -n1) + 1 ));
    [[ $uid == 1 ]] && echo 1000 || echo $uid;
}
getdb ()
{
    echo $SQCMD;
}
setuser ()
{
    local U_TMP=$(grepuser "$1");
    [[ $U_TMP && (( $(grep -c . <<<"$U_TMP") != 1 )) ]] && echo "Ambiguous result for '$1'" && return 10;
    export UUSER=$(echo $U_TMP | cut -d: -f1);
    export U_UID=$(echo $UUSER | cut -d: -f3);
    export U_GID=$(echo $UUSER | cut -d: -f4);
    export VHOST=$(echo $UUSER | cut -d: -f5);
    export UPATH=$(echo $UUSER | cut -d: -f6);
    export U_SHL=$(echo $UUSER | cut -d: -f7);
}
sethost ()
{
    if [[ -z $1 || $1 =~ -h ]]; then
        echo "Usage: sethost uuser@domain|domain [(mysql)|sqlite] [distro($OSREL)] [IP]";
        return 1;
    elif [[ $1 =~ "@" ]]; then
        export UUSER=${1%@*};
        export VHOST=${1#*@};
        if [[ $UUSER == u* ]]; then
            U_UID=${UUSER#*u}
        else
            [[ $A_UID ]] && U_UID=$A_UID || U_UID=1000;
        fi;
        export U_UID;
    else
        export VHOST=$1;
        export U_UID=$(newuid);
        export UUSER=$([[ $U_UID = 1000 ]] && echo "sysadm" || echo "u$U_UID");
    fi;
    export U_GID=$U_UID;

    export HNAME=${VHOST%%.*}
    export HDOMN=${VHOST#*.*}

    [[ $UUSER == $ADMIN ]] && export DNAME=$ADMIN || export DNAME=${VHOST//[.-]/_};

    export OSREL=${3:-$OSREL}

    if [[ -z $4 ]]; then
        export IP4_0=$(ip -4 route get 1.1.1.1 | awk '/src/ {print $7}')
    elif [[ $4 =~ "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$" ]]; then
        export IP4_0=$4
    else
        export IP4_0=$(hostname -i|cut -d ' ' -f -1)
    fi

    export DPATH="$DBSQL/$ADMIN/$ADMIN.db";
    export EXMYS="mysql -BN $ADMIN";
    export EXSQL="sqlite3 $DPATH";
    export DTYPE=${2:-'mysql'}

    if [[ $DTYPE == mysql ]]; then
        export SQCMD=$EXMYS;
        export SQDNS="mysql -BN pdns";
    elif [[ $DTYPE == sqlite ]]; then
        export SQCMD=$EXSQL;
        export SQDNS="sqlite3 $DBSQL/$ADMIN/pdns.db";
    else
        echo "!!! ERROR: unknown database type '$DTYPE'";
    fi;

    # was pwgen -sB 16 1
    export APASS=$(head /dev/urandom|tr -dc A-Za-z0-9|head -c16);
    export DPASS=$(head /dev/urandom|tr -dc A-Za-z0-9|head -c16);
    export EPASS=$(head /dev/urandom|tr -dc A-Za-z0-9|head -c16);
    export UPASS=$(head /dev/urandom|tr -dc A-Za-z0-9|head -c16);
    export WPASS=$(head /dev/urandom|tr -dc A-Za-z0-9|head -c16);

    export AHOST=$(hostname -f|tr 'A-Z' 'a-z')
    export MHOST="mail.$(echo $VHOST|sed 's/^mail\.//')"

    # OS dependant overrides (maybe create a function)
    if [[ -f /etc/alpine-release ]]; then
        export C_DNS='/etc/pdns'
        export C_FPM='/etc/php7/php-fpm.d'
        export C_SQL='/etc/my.cnf.d'
        export WUGID='nginx'
    elif [[ -f /etc/pacman.conf ]]; then
        export C_DNS='/etc/powerdns'
        export C_FPM='/etc/php/php-fpm.d'
        export C_SQL='/etc/my.cnf.d'
        export WUGID='http'
    else
        export C_DNS='/etc/powerdns'
        export C_FPM="/etc/php/$V_PHP/fpm";
        export C_SQL='/etc/mysql'
        export WUGID='www-data'
    fi

    export DUSER=$UUSER;
    export MPATH=$VPATH/$VHOST/home;
    export UPATH=$VPATH/$VHOST;
    export U_SHL=$([[ $U_UID = 1000 ]] && echo "/bin/bash" || echo "/bin/sh");
    export VUSER='admin';
    export WPATH=$VPATH/$VHOST/var/www;
    export WPUSR=$(head /dev/urandom|tr -dc a-z|head -c6);
    [[ $VHOST == $AHOST ]] && TEMPH=${VHOST#*.} || TEMPH=$VHOST;
    export AMAIL="$VUSER@$TEMPH";
}
sx ()
{
    [[ -z $2 || $1 =~ -h ]] && \
      echo "Usage: sx host command (host must be in ~/.ssh/config)" && return 1
    _HOST=$1; shift; ssh $_HOST -q -t "bash -ci '$@'"
}
updhost ()
{
    if [[ -z $1 || $1 =~ -h ]]; then
        echo "Usage: updhost vhost [(mysql)|sqlite] [distro($OSREL)] [IP] [V_PHP]";
        return 1;
    fi

    if [[ -f /root/.vhosts/$1 ]]; then
        . /root/.vhosts/$1
    else
        sethost $1
    fi
    . /root/.shrc

    export HNAME=${1%%.*}
    export HDOMN=${1#*.*}
    export DTYPE=${2:-$DTYPE}
    export OSREL=${3:-$OSREL}
    export IP4_0=${4:-$IP4_0}
    export V_PHP=${5:-$V_PHP}
    export LROOT="/usr/local/lsws"

    # OS dependant overrides
    if [[ -f /etc/alpine-release ]]; then
        export C_DNS='/etc/pdns'
        export C_FPM='/etc/php7/php-fpm.d'
        export C_SQL='/etc/my.cnf.d'
        export WUGID='nginx'
    elif [[ -f /etc/pacman.conf ]]; then
        export C_DNS='/etc/powerdns'
        export C_FPM='/etc/php/php-fpm.d'
        export C_SQL='/etc/my.cnf.d'
        export WUGID='http'
    else
        export C_DNS='/etc/powerdns'
        export C_FPM="/etc/php/$V_PHP/fpm";
        export C_SQL='/etc/mysql'
        export WUGID='www-data'
    fi

    if [[ $DTYPE == mysql ]]; then
        export SQCMD=$EXMYS;
        export SQDNS="mysql -BN pdns";
    elif [[ $DTYPE == sqlite ]]; then
        export SQCMD=$EXSQL;
        export SQDNS="sqlite3 $DBSQL/$ADMIN/pdns.db";
    else
        echo "!!! ERROR: unknown database type '$DTYPE'";
    fi
    gethost > /root/.vhosts/$1
}
export -f chktime f gethost getuser getusers go2 grepuser newuid setuser sethost sc sx updhost
