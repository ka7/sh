#!/usr/bin/env bash
# .sh/bin/setup-host2 20170524 - 2020103
# Copyright (C) 1995-2021 Mark Constable <markc@renta.net> (AGPL-3.0)

### TEMP WIP
# This will replace setup-host once working. The idea is to extract all the
# non-identifying names and vhost core setup code and add it here so that a
# primary VM image can be cloned. Ie; so as much preliminary setup can be
# done without actually adding any custom IPs, users or vhosts. Anything
# to do with setting up IPs, users or vhosts needs to be done in a
# separate followup setup-sysadm script to create the primary vhost.

# ADDED THE START OF ARCH/MANJARO SUPPORT

[[ $1 =~ '-h' ]] && \
  echo "Usage: setup-host2 [(mysql)|sqlite] [php version] [os release] [os mirror]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

echo "### $0 $*"

DTYPE=${1:-$DTYPE}
V_PHP=${2:-$V_PHP}
OSREL=${3:-$OSREL}
OSMIR=${4:-$OSMIR}

if [[ -f /etc/pacman.conf ]]; then

    echo "Install Arch/Manjaro base packages"

    # Default List of required core Netserva Arch/Manjaro packages
    DLIST="bash which bc inetutils s-nail busybox ca-certificates curl db 
dovecot ebtables fcgiwrap gawk git iptables iputils jq libxml2 mailgraph 
msmtp mtr mutt nano net-tools nginx-mainline opendkim opendmarc powerdns 
pflogsumm php php-fpm php-gd php-imap php-intl php-sqlite php-imagick 
php-redis perl-mail-spf postfix pwgen redis rsync roundcubemail sqlite
sudo time minizip wget which whois"

    MLIST="mariadb mariadb-clients"
    
    pacman -Syu
    pacman -S $DLIST --needed --noconfirm
    [[ $DTYPE == mysql ]] && pacman -S $MLIST --needed --noconfirm
    pacman -Qsq python | pacman -Rcns --noconfirm -

elif [[ -f /etc/apt/sources.list ]]; then

    echo "Install Debian/Ubuntu base packages"
    
    # Default List of required core Netserva Debian packages
    DLIST="apache2-utils apt-utils bash bc bind9-host bsd-mailx
busybox-static ca-certificates curl db5.3-util deborphan dnsutils
dovecot-imapd dovecot-lmtpd dovecot-managesieved dovecot-sqlite ebtables
fcgiwrap gawk git iptables iputils-ping jq libxml2-utils mailgraph msmtp
mtr-tiny mutt nano net-tools nginx-light opendkim opendkim-tools
opendmarc openssh-server pdns-backend-sqlite3 pflogsumm php$V_PHP
php$V_PHP-bcmath php$V_PHP-curl php$V_PHP-fpm php$V_PHP-gd php$V_PHP-gmp
php$V_PHP-imap php$V_PHP-intl php$V_PHP-mbstring php$V_PHP-soap
php$V_PHP-sqlite3 php$V_PHP-xml php$V_PHP-xmlrpc php$V_PHP-zip
php-imagick php-redis postfix-policyd-spf-perl postfix-sqlite pwgen
redis-server rsyslog rsync sqlite3 sudo time unzip wget whois"

    # Mysql List of packages (not need if using SQLite)
    MLIST="dovecot-mysql mariadb-common mariadb-client mariadb-server 
pdns-backend-mysql php$V_PHP-mysql postfix-mysql"

    # Remove List of packages (RLIST="" to ignore removal)
    RLIST="*golang* *python* accountsservice apache2 at bind9 cloud* 
install-info lxcfs man* open-iscsi rpcbind sasl2-bin ttf-* 
ubuntu-advantage-tools vi* xinetd"

    # Make sure that IP4 is the default
    grep -q '^#precedence ::ffff:0:0/96  100' /etc/gai.conf
    if [[ $? -eq 0 ]]; then
        echo "Warning: giving preference to IPv4 (IPv6 is Ubuntu default)"
        sed -i 's;#precedence ::ffff:0:0/96  100;precedence ::ffff:0:0/96  100;' /etc/gai.conf
    fi

    if [[ ! -f /etc/apt/apt.conf.d/20local ]]; then
        echo "Create /etc/apt/apt.conf.d/20local"
        cp ~/.sh/etc/_etc_apt_apt.conf.d_20local /etc/apt/apt.conf.d/20local
    fi

    if [[ ! -f /etc/apt/sources.list.orig ]]; then
        export DEBIAN_FRONTEND=noninteractive
        export TERM=linux
        
        echo "Setup apt sources list for $OSREL"
        mv /etc/apt/sources.list /etc/apt/sources.list.orig
        sed ~/.sh/etc/_etc_apt_sources.list \
        -e "s/_OSMIR/$OSMIR/" -e "s/_OSREL/$OSREL/" > /etc/apt/sources.list
        
        cat << EOS | debconf-set-selections
postfix postfix/destinations string 'localhost'
postfix postfix/mailname string 'localhost'
postfix postfix/main_mailer_type string 'Internet Site'
EOS
        
        echo "Adding key for bionic (18.04) repo"
        apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 3B4FE6ACC0B21F32 > /dev/null 2>&1

        echo "Adding key for openlitespeed repo"
        apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 011AA62DEDA1F085 > /dev/null 2>&1
        
        echo "Updating package list for $OSREL, patience please..."
        apt-get -yqq update > /dev/null #2>&1
        
        echo "Upgrading packages for $OSREL, more patience..."
        apt-get -yqq -u dist-upgrade > /dev/null #2>&1
        
        echo "Installing default package set, yet more patience..."
        apt-get -yqq install $DLIST > /dev/null #2>&1
        
        if [[ $DTYPE == mysql ]]; then
            echo "Installing MYSQL package set, even more patience..."
            apt-get -yqq install $MLIST > /dev/null #2>&1
            
            echo "Change Mysql to utf8 otherwise pdns tables will not install"
            sed -i /etc/mysql/mariadb.conf.d/50-server.cnf \
            -e "/^character-set-server/ s/utf8mb4/utf8/" \
            -e "/^collation-server/ s/utf8mb4_general_ci/utf8_general_ci/"
        fi
        
        echo "Disable pdns until actually needed"
        systemctl stop pdns > /dev/null #2>&1
        systemctl disable pdns > /dev/null #2>&1
        
        echo "Install bionic spamprobe (the focal spamprobe crashes)"
        apt-get install spamprobe=1.4d-14build1 > /dev/null #2>&1
        apt-mark hold spamprobe > /dev/null
    fi

    if [[ -f /usr/bin/python3 && ! -d /usr/share/xsessions ]]; then
        if [[ -f /usr/share/unattended-upgrades/unattended-upgrade-shutdown ]]; then
            echo "Remove unattended-upgrades"
            systemctl stop unattended-upgrades
            systemctl disable unattended-upgrades
        fi
        echo "Remove python and all related packages"
        apt-get -yqq --purge remove $RLIST > /dev/null #2>&1
        
    fi
fi

echo "Replace /sbin/netplan with systemd-networkd"
[[ ! -d /etc/systemd/network ]] && mkdir /etc/systemd/network

if [[ $(ls -A /etc/systemd/network/*dhcp*.network 2> /dev/null) ]]; then
    echo "/etc/systemd/network/*dhcp*.network already exists"
else
    echo "Create /etc/systemd/network/10-dhcp.network"
    cp ~/.sh/etc/_etc_systemd_network_10-dhcp.network /etc/systemd/network/10-dhcp.network
    chmod 644 /etc/systemd/network/10-dhcp.network
    systemctl enable systemd-networkd > /dev/null 2>&1
fi

# We now have git available so install the essential SH scripts
if [[ ! -d /root/.sh ]]; then
    echo "Setup NetServa SH scripts"
    cd && git clone -q https://github.com/netserva/sh .sh > /dev/null
    /root/.sh/bin/shm install > /dev/null
    /root/.sh/bin/shm perms
    
    echo "Tweak git for updates"
    git config --global pull.rebase false
fi

if [[ /etc/resolv.conf -ef /run/systemd/resolve/stub-resolv.conf ]]; then
    echo "Change /etc/resolv.conf to talk directly to 1.1.1.1"
    cd /etc && rm resolv.conf && ln -s ../run/systemd/resolve/resolv.conf
    sed -i /etc/systemd/resolved.conf \
     -e 's/^#DNS=.*/DNS=1.1.1.1/' \
     -e 's/^#FallbackDNS=.*/FallbackDNS=8.8.8.8/'
    systemctl restart systemd-resolved
fi

if [[ ! -f /etc/ssh/sshd_config.orig ]]; then
    echo "Create new /etc/ssh/sshd_config"
    mv /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    cp /root/.sh/etc/_etc_ssh_sshd__config /etc/ssh/sshd_config
    [[ -f /etc/pacman.conf ]] && SSH=sshd || SSH=ssh
    systemctl restart $SSH
fi

if [[ ! -d /root/.ssh ]]; then
    echo "Create host /root/.ssh dir"
    mkdir /root/.ssh
    chmod 700 /root/.ssh
fi

if [[ ! -f /root/.ssh/config ]]; then
    echo "Create host /root/.ssh/config"
    cp ~/.sh/etc/_.ssh_config ~/.ssh/config
    chmod 600 /root/.ssh/*
fi

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
