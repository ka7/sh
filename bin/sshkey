#!/usr/bin/env bash
# .sh/bin/sshkey 20181119 - 20220125
# Copyright (C) 1995-2022 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 || $1 =~ '-h' ]] && echo "Usage: sshkey add|create|del|list|show [sshkey] [user]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "!!! ERROR: must be root (use sudo -i)" && exit 2

SKCMD=$1
KEYID=${2:-'id_rsa'}
KEYID=${KEYID%@*} # remove any trailing @hostname
LUSER=${3:-$USER}
LHOME=$(eval echo ~$LUSER)
VHOST=$(hostname -f)

[[ ! -d $LHOME ]] && echo "ERROR: '$LHOME' homedir does not exist" && exit 3

if [[ ! -d $LHOME/.ssh ]]; then
    echo ">>> Create local $LHOME/.ssh dir"
    mkdir $LHOME/.ssh
    chown $LUSER:$LUSER $LHOME/.ssh
    chmod 700 $LHOME/.ssh
fi

if [[ $1 == add ]]; then

    echo "Add key (paste public key into editor, ctrl-x to save and quit)"
    sleep 2
    nano -t -x -c $LHOME/.ssh/authorized_keys

elif [[ $1 == show ]]; then

    if [[ -f $LHOME/.ssh/$KEYID.pub ]]; then
        cat $LHOME/.ssh/$KEYID.pub
    else
        echo "$LHOME/.ssh/$KEYID.pub does not exist"
    fi

elif [[ $1 == create ]]; then

    echo "Create new key"
    su - $LUSER -c "
cd .ssh
ssh-keygen -f $LHOME/.ssh/$KEYID -N '' -C $KEYID@$VHOST >/dev/null 2>&1
cat $LHOME/.ssh/$KEYID.pub >> $LHOME/.ssh/authorized_keys
chmod 600 *"
    cat $LHOME/.ssh/$KEYID.pub

elif [[ $1 == del ]]; then

    grep " $KEYID@" $LHOME/.ssh/authorized_keys >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo "Delete public key"
        sed '/'" $KEYID@"'/d' -i $LHOME/.ssh/authorized_keys
    else
        echo "$KEYID does not exist in $LHOME/.ssh/authorized_keys"
    fi

    if [[ $(stat -t $LHOME/.ssh/$KEYID* 2>/dev/null) ]]; then
        if [[ -f $LHOME/.ssh/$KEYID ]]; then
            echo "Delete private key $LHOME/.ssh/$KEYID"
            rm $LHOME/.ssh/$KEYID
        fi

        if [[ -f $LHOME/.ssh/$KEYID.pub ]]; then
            echo "Delete public key $LHOME/.ssh/$KEYID.pub"
            rm $LHOME/.ssh/$KEYID.pub
        fi
    else
        echo "$LHOME/.ssh/$KEYID does not exist"
    fi

elif [[ $1 == list ]]; then

    if [[ -f $LHOME/.ssh/authorized_keys ]]; then
        cat $LHOME/.ssh/authorized_keys | awk '{print $3}'
        echo
    fi
    /bin/ls -1 $LHOME/.ssh/
fi
