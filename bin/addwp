#!/usr/bin/env bash
# .sh/bin/addwp 20160231 - 20210406
# Copyright (C) 1995-2021 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 || $1 =~ -h ]] && echo "Usage: addwp domain [multi] [path]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

. /root/.vhosts/$1 || exit 3

MULTI=${2:-''}
FPATH=${3:-''}
TITLE=$(echo $VHOST|tr 'a-z' 'A-Z')
MSITE=''
MSNET=''
WPAPP='/usr/local/bin/wp'

if [[ $MULTI =~ ^mu ]]; then
    MSITE='multisite-install --subdomains'
    MSNET='--network'
else
    MSITE='install'
fi

if [[ $FPATH ]]; then
    WPURL="https://$VHOST/$FPATH"
    FPATH="$WPATH/$FPATH"
else
    WPURL="https://$VHOST"
    FPATH="$WPATH"
fi

[[ -d $UPATH/var/public ]] && mv $UPATH/var/public $WPATH
[[ -d $UPATH/var/private ]] && mv $UPATH/var/private $WPATH

if [[ ! -x $WPAPP ]]; then
    echo "### Install wp-cli as $WPAPP"
    curl -s -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x wp-cli.phar
    mv wp-cli.phar $WPAPP
fi

# Exception: keep wp-* tables out of $ADMIN (sysadm) database
if [[ $DNAME == $ADMIN ]]; then
    DNAME=${VHOST//[.-]/_}
fi

if [[ $(mysql -BNe "SHOW DATABASES LIKE '$DNAME'") ]]; then
    echo "### Warning: '$DNAME' database already exists"
else
    echo "### Create $DNAME database"
    mysql -e "CREATE DATABASE IF NOT EXISTS $DNAME"
    mysql -e "GRANT ALL PRIVILEGES ON $DNAME.* TO '$DUSER'@'localhost' IDENTIFIED BY '$DPASS'"
    mysql -e "FLUSH PRIVILEGES"
fi

if [[ -f $FPATH/wp-config.php ]]; then
    echo "### ERROR: Wordpress is already installed"
    exit 4
else
    echo "### Download Wordpress"
    cd $UPATH/var
    if [[ ! -f latest.tar.gz ]]; then
        wget -q -nv --no-check-certificate https://wordpress.org/latest.tar.gz
    fi
    tar xf latest.tar.gz
    rm latest.tar.gz
    if [[ -d $FPATH ]]; then
        [[ -d ${FPATH}_old ]] && rm -rf ${FPATH}_old
        mv $FPATH ${FPATH}_old
    fi
    mv wordpress $FPATH
    chown $U_UID:$WUGID -R $FPATH
fi

if [[ -f $FPATH/wp-includes/version.php ]]; then
    echo "### Setting up Wordpress"
    su - $UUSER -c "
cd $FPATH
$WPAPP core config --dbname='$DNAME' --dbuser='$DUSER' --dbpass='$DPASS'
$WPAPP core $MSITE \
  --url='$WPURL' \
  --title='$TITLE' \
  --admin_user='$WPUSR' \
  --admin_password='$WPASS' \
  --admin_email='$AMAIL'

$WPAPP user update '$WPUSR' \
  --first_name='${ANAME% *}' \
  --last_name='${ANAME#* }' \
  --display_name='$ANAME' \
  --user_url='$WPURL'

$WPAPP option update timezone_string '$TAREA/$TCITY'
$WPAPP option update uploads_use_yearmonth_folders '0'
$WPAPP option update thumbnail_size_w '384'
$WPAPP option update thumbnail_size_h '0'
$WPAPP option update medium_size_w '768'
$WPAPP option update medium_size_h '0'
$WPAPP option update large_size_w '0'
$WPAPP option update large_size_h '0'
$WPAPP option update medium_large_size_w '0'
$WPAPP option update medium_large_size_h '0'
$WPAPP option update permalink_structure '/%postname%/'
$WPAPP option set default_comment_status closed
" > /dev/null

export PLUGINS=$(echo $(su $UUSER -c "$WPAPP plugin list --field=name --path=$FPATH"))
export PAGES=$(su $UUSER -c "$WPAPP post list --post_type=page --format=ids --path=$FPATH")
export POSTS=$(su $UUSER -c "$WPAPP post list --post_type=post --format=ids --path=$FPATH")

#echo 'Install Kadence Starter Templates plugin' # OPTIONAL
#$WPAPP plugin --quiet install kadence-starter-templates 2> /dev/null
#$WPAPP plugin --quiet activate kadence-starter-templates $MSNET 2> /dev/null

    su - $UUSER -c "
cd $FPATH
$WPAPP plugin delete $PLUGINS
$WPAPP post delete $POSTS
$WPAPP post delete $PAGES
$WPAPP theme delete twentynineteen twentytwenty

echo 'Install Kadence theme'
$WPAPP theme --quiet install kadence 2> /dev/null
echo 'Create and active kadence-child theme'
$WPAPP scaffold --quiet child-theme kadence-child --parent_theme=kadence 2> /dev/null
$WPAPP theme --quiet activate kadence-child $MSNET 2> /dev/null

echo 'Install Kadence Blocks plugin'
$WPAPP plugin --quiet install kadence-blocks 2> /dev/null
$WPAPP plugin --quiet activate kadence-blocks $MSNET 2> /dev/null

echo 'Install Elementor plugin'
$WPAPP plugin --quiet install elementor 2> /dev/null
$WPAPP plugin --quiet activate elementor $MSNET 2> /dev/null

echo 'Install Autoptimize plugin'
$WPAPP plugin --quiet install autoptimize 2> /dev/null
$WPAPP plugin --quiet activate autoptimize $MSNET 2> /dev/null

echo 'Install WPvivid plugin'
$WPAPP plugin --quiet install wpvivid-backuprestore 2> /dev/null
$WPAPP plugin --quiet activate wpvivid-backuprestore $MSNET 2> /dev/null

$WPAPP post create --post_type=page --post_title='Home' --post_status=publish
$WPAPP post create --post_type=page --post_title='About' --post_status=publish
$WPAPP post create --post_type=page --post_title='News' --post_status=publish
$WPAPP post create --post_type=page --post_title='Contact' --post_status=publish
" > /dev/null

export HOMEPAGE=$(su $UUSER -c "$WPAPP post list --post_type=page --name=home --format=ids --path=$FPATH")
export NEWSPAGE=$(su $UUSER -c "$WPAPP post list --post_type=page --name=news --format=ids --path=$FPATH")
export ABOUTPAGE=$(su $UUSER -c "$WPAPP post list --post_type=page --name=about --format=ids --path=$FPATH")
export CONTACTPAGE=$(su $UUSER -c "$WPAPP post list --post_type=page --name=contact --format=ids --path=$FPATH")

    su - $UUSER -c "
cd $FPATH
$WPAPP menu create 'Primary Menu'
$WPAPP menu item add-post primary-menu $HOMEPAGE
$WPAPP menu item add-post primary-menu $ABOUTPAGE
$WPAPP menu item add-post primary-menu $NEWSPAGE
$WPAPP menu item add-post primary-menu $CONTACTPAGE
$WPAPP menu location assign primary-menu primary
$WPAPP option update page_on_front $HOMEPAGE
$WPAPP option update page_for_posts $NEWSPAGE
$WPAPP option update show_on_front page
" > /dev/null

    cat << EOS >> $FPATH/wp-content/themes/kadence-child/functions.php
remove_action('admin_color_scheme_picker', 'admin_color_scheme_picker');
add_action('admin_head', function() {
    echo '<style>.form-table th, .form-table td { padding: 0.25em; }</style>';
});
EOS

    chperms $VHOST
    cat << EOS | tee -a /root/.vhosts/$VHOST.conf > /dev/null
WordPress
=========

Wordpress: $WPURL/wp-admin/
Username: $WPUSR or $AMAIL
Password: $WPASS

EOS
fi
