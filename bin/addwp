#!/usr/bin/env bash
# .sh/bin/addwp 20160231 - 20201010
# Copyright (C) 1995-2020 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 || $1 =~ -h ]] && echo "Usage: addwp domain [multi] [path]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

if [[ -f /root/.vhosts/$1 ]]; then
    source /root/.vhosts/$1
else
    echo "!!! ERROR: set up vhost config first, ie;"
    echo "    sethost $1 [mysql] [IP]"
    echo "    gethost > ~/.vhosts/$1"
    echo "    chmod 600 ~/.vhosts/$1"
    exit 3
fi

[[ ! -d $VPATH ]] && echo "!!! ERROR: $VPATH does NOT exist, run 'setup-host' first" && exit 4
[[ ! -d $WPATH ]] && echo "!!! ERROR: $WPATH does NOT exist, run 'addvhost' first" && exit 5

MULTI=${2:-''}
FPATH=${3:-''}
TITLE=$(echo $VHOST|tr 'a-z' 'A-Z')
MSITE=''
MSNET=''

if [[ $MULTI =~ ^mu ]]; then
    MSITE='multisite-install --subdomains'
    MSNET='--network'
else
    MSITE='install'
fi

[[ -d $C_SSL/$VHOST ]] && SCHEME="https://" || SCHEME="http://"

if [[ $FPATH ]]; then
    WPURL=$SCHEME$VHOST/$FPATH
    FPATH=$WPATH/$FPATH
else
    WPURL=$SCHEME$VHOST
    FPATH=$WPATH
fi

[[ -d $UPATH/var/public ]] && mv $UPATH/var/public $WPATH
[[ -d $UPATH/var/private ]] && mv $UPATH/var/private $WPATH

if [[ ! -x /usr/local/bin/wp ]]; then
    echo "!!! Install wp-cli as /usr/local/bin/wp"
    curl -s -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x wp-cli.phar
    mv wp-cli.phar /usr/local/bin/wp
fi

# Exception: keep wp-* tables out of $ADMIN (sysadm) database
if [[ $DNAME == $ADMIN ]]; then
    DNAME=${VHOST//[.-]/_}
fi

if [[ $(mysql -BNe "SHOW DATABASES LIKE '$DNAME'") ]]; then
    echo "!!! '$DNAME' database already exists"
else
    echo "!!! Create $DNAME database"
    mysql -e "CREATE DATABASE IF NOT EXISTS $DNAME"
    mysql -e "GRANT ALL PRIVILEGES ON $DNAME.* TO '$DUSER'@'localhost' IDENTIFIED BY '$DPASS'"
    mysql -e "FLUSH PRIVILEGES"
fi

if [[ -f $FPATH/wp-config.php ]]; then
    echo "!!! Wordpress already installed"
else
    echo "!!! Download Wordpress"
    cd $UPATH/var
    if [[ ! -f latest.tar.gz ]]; then
        wget -nv --no-check-certificate https://wordpress.org/latest.tar.gz
    fi
    tar xf latest.tar.gz
    rm latest.tar.gz
    if [[ -d $FPATH ]]; then
        [[ -d ${FPATH}_old ]] && rm -rf ${FPATH}_old
        mv $FPATH ${FPATH}_old
    fi
    mv wordpress $FPATH
    chown $U_UID:www-data -R $FPATH
fi

# Add 2> /dev/null to remove wp-cli permission warnings
if [[ -f $FPATH/wp-includes/version.php ]]; then
    echo "!!! Setting up Wordpress"
    su - $UUSER -c "
cd $FPATH
wp core config --dbname='$DNAME' --dbuser='$DUSER' --dbpass='$DPASS'
wp core $MSITE \
  --url='$WPURL' \
  --title='$TITLE' \
  --admin_user='$WPUSR' \
  --admin_password='$WPASS' \
  --admin_email='$AMAIL'

wp user update '$WPUSR' \
  --first_name='${ANAME% *}' \
  --last_name='${ANAME#* }' \
  --display_name='$ANAME' \
  --user_url='$WPURL'

wp option update timezone_string '$TAREA/$TCITY'
wp option update uploads_use_yearmonth_folders '0'
wp option update thumbnail_size_w '384'
wp option update thumbnail_size_h '0'
wp option update medium_size_w '768'
wp option update medium_size_h '0'
wp option update large_size_w '0'
wp option update large_size_h '0'
wp option update medium_large_size_w '0'
wp option update medium_large_size_h '0'
wp option update permalink_structure '/%postname%/'
wp option set default_comment_status closed
"

export PLUGINS=$(echo $(su $UUSER -c "wp plugin list --field=name --path=$FPATH"))
export PAGES=$(su $UUSER -c "wp post list --post_type=page --format=ids --path=$FPATH")
export POSTS=$(su $UUSER -c "wp post list --post_type=post --format=ids --path=$FPATH")

# We don't really need a child theme, leave this as a howto example
#wp scaffold --quiet child-theme hello-elementor-child --parent_theme=hello-elementor --activate 2> /dev/null

# When it's available at wordpress.org
#echo 'Install and activate the Kadence theme'
#wp theme --quiet install kadence --activate 2> /dev/null

#echo 'Install Brizy plugin'
#wp plugin --quiet install brizy 2> /dev/null
#wp plugin --quiet activate brizy $MSNET 2> /dev/null

    su - $UUSER -c "
cd $FPATH
wp plugin delete $PLUGINS
wp post delete $POSTS
wp post delete $PAGES
wp theme delete twentyseventeen twentynineteen

echo 'Install and activate the Astra theme'
wp theme --quiet install astra --activate 2> /dev/null
wp theme --quiet enable astra --activate $MSNET 2> /dev/null

echo 'Install Elementor plugin'
wp plugin --quiet install elementor 2> /dev/null
wp plugin --quiet activate elementor $MSNET 2> /dev/null

echo 'Install Autoptimize plugin'
wp plugin --quiet install autoptimize 2> /dev/null
wp plugin --quiet activate autoptimize $MSNET 2> /dev/null

echo 'Install WPvivid plugin'
wp plugin --quiet install wpvivid-backuprestore/ 2> /dev/null
wp plugin --quiet activate wpvivid-backuprestore/ $MSNET 2> /dev/null

wp post create --post_type=page --post_title='Home' --post_status=publish
wp post create --post_type=page --post_title='About' --post_status=publish
wp post create --post_type=page --post_title='News' --post_status=publish
wp post create --post_type=page --post_title='Contact' --post_status=publish
"

export HOMEPAGE=$(su $UUSER -c "wp post list --post_type=page --name=home --format=ids --path=$FPATH")
export NEWSPAGE=$(su $UUSER -c "wp post list --post_type=page --name=news --format=ids --path=$FPATH")
export ABOUTPAGE=$(su $UUSER -c "wp post list --post_type=page --name=about --format=ids --path=$FPATH")
export CONTACTPAGE=$(su $UUSER -c "wp post list --post_type=page --name=contact --format=ids --path=$FPATH")

# "primary-menu primary" below might depend on the Astra theme being active

    su - $UUSER -c "
cd $FPATH
wp menu create 'Primary Menu'
wp menu item add-post primary-menu $HOMEPAGE
wp menu item add-post primary-menu $ABOUTPAGE
wp menu item add-post primary-menu $NEWSPAGE
wp menu item add-post primary-menu $CONTACTPAGE
wp menu location assign primary-menu primary
wp option update page_on_front $HOMEPAGE
wp option update page_for_posts $NEWSPAGE
wp option update show_on_front page
"

#    cat << EOS >> $FPATH/wp-content/themes/hello-elementor-child/functions.php
#remove_action('admin_color_scheme_picker', 'admin_color_scheme_picker');
#add_action('admin_head', function() {
#    echo '<style>.form-table th, .form-table td { padding: 0.25em; }</style>';
#});
#EOS

    chperms $VHOST
    cat << EOS | tee -a /root/.vhosts/$VHOST.conf
WordPress
=========

Wordpress: $WPURL/wp-admin/
Username: $WPUSR or $AMAIL
Password: $WPASS

EOS
fi

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
