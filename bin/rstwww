#!/usr/bin/env bash
# .sh/bin/rstwww 20180205 - 20220330
# Copyright (C) 1995-2022 Mark Constable <markc@renta.net> (AGPL-3.0)

### WARNING: this has hardly been tested

[[ -z $1 || $1 =~ -h ]] && echo "Usage: rstwww domain [dbname] [oldomain]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

[[ ! -d $VPATH ]] && echo "!!! ERROR: setup server first" && exit 3

[[ $DEBUG ]] && set -x

VHOST=$1
DNAME=${2:-${VHOST//[.-]/_}}
VFILE=${3:-$VHOST}
DFILE=${VFILE//[.-]/_}
UPATH=$VPATH/$VHOST
WPATH=$UPATH/var/www
UUSER=$(stat -c "%U" $UPATH/var)

[[ ! -d $WPATH ]] && echo "!!! ERROR: $WPATH does NOT exist, run 'addvhost' first" && exit 4

cd $UPATH/var

if [[ ! -f $VFILE.tgz ]]; then
    echo "!!! ERROR: $VHOST.tgz backup file does not exist"
else
    if [[ $(mysql -BNe "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='$DNAME'") ]]; then
        [[ -f $DFILE.sql ]] && echo "!!! Warning: removing old $DFILE.sql" && rm $DFILE.sql
        echo "!!! Backup old $DNAME database"
        mysqldump $DNAME >$DNAME.sql
        chown $(stat -c "%u:%g" www) $DNAME.sql
        chmod 640 $DNAME.sql
        echo "!!! Delete old $DNAME database"
        mysql -e "DROP DATABASE $DNAME"
    fi

    [[ -f $DNAME.sql ]] && TARUP="www $DNAME.sql" || TARUP="www"
    tar czf $(date +'%Y%m%d')-$VHOST.tgz $TARUP
    [[ -f $DNAME.sql ]] && rm $DNAME.sql
    chown $(stat -c "%u:%g" www) $(date +'%Y%m%d')-$VHOST.tgz
    chmod 640 $(date +'%Y%m%d')-$VHOST.tgz
    echo "!!! Created $(du -bh $(date +'%Y%m%d')-$VHOST.tgz)"

    tar xf $VFILE.tgz

    if [[ -f $DFILE.sql ]]; then
        echo "!!! Create new empty $DNAME database"
        mysql -e "CREATE DATABASE $DNAME"
        echo "!!! Restore database from $DFILE.sql"
        cat $DFILE.sql | mysql $DNAME
        rm $DFILE.sql
    else
        echo "!!! Warning: $DFILE.sql backup file does not exist"
    fi

    if [[ $VFILE != $VHOST ]]; then
        WPUSR=$(pwgen -sB0A 6 1)
        WPASS=$(newpw 1)
        AMAIL=admin@$VHOST

        mysql -e "SET PASSWORD FOR '$UUSER'@'localhost' = PASSWORD('$WPASS')"
        mysql -e "FLUSH PRIVILEGES"

        sed -i "/DB_NAME/s/'[^']*'/'$DNAME'/2" www/html/wp-config.php
        sed -i "/DB_USER/s/'[^']*'/'$UUSER'/2" www/html/wp-config.php
        sed -i "/DB_PASSWORD/s/'[^']*'/'$WPASS'/2" www/html/wp-config.php

        wp user create $WPUSR $AMAIL \
            --user_pass=$WPASS \
            --role=administrator \
            --path=www --allow-root 2>/dev/null
        wp search-replace "$VFILE" "$VHOST" --skip-columns=guid --report-changed-only --path=www --allow-root 2>/dev/null
        wp plugin deactivate autoptimize --path=www --allow-root 2>/dev/null
        wp plugin deactivate wp-super-cache --path=www --allow-root 2>/dev/null
        wp plugin deactivate wordpress-social-login --path=www --allow-root 2>/dev/null
        wp plugin deactivate jgc-google-recaptcha --path=www --allow-root 2>/dev/null
        wp plugin deactivate google-analytics-dashboard-for-wp --path=www --allow-root 2>/dev/null
        # Just in case these were installed
        wp plugin deactivate elementor-pro --path=www --allow-root 2>/dev/null
        wp plugin deactivate astra-pro --path=www --allow-root 2>/dev/null
        wp plugin deactivate astra-pro-sites --path=www --allow-root 2>/dev/null

        echo "
New login details

Wordpress: https://$VHOST/wp-admin
Username: $WPUSR or $AMAIL
Password: $WPASS
"
    fi
    chperms $VHOST
    echo "!!! Restored $VHOST - $(du -sbh www)"
fi

[[ $DEBUG ]] && set +x
