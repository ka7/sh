#!/usr/bin/env bash
# .sh/bin/dkim 20170201 - 20210415
# Copyright (C) 1995-2021 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 || $1 =~ '-h' ]] &&
    echo "Usage: dkim add|del|list|show [domain()] [selector(mail)] [keylen(2048)]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

if [[ ! -d /etc/opendkim ]]; then
    mkdir /etc/opendkim
    mkdir /etc/opendkim/dnstxt
    mkdir /etc/opendkim/keyfiles
    touch /etc/opendkim/KeyTable
    touch /etc/opendkim/SigningTable
    echo -e "127.0.0.1\nlocalhost\n" >/etc/opendkim/TrustedHosts
    chown opendkim:opendkim -R /etc/opendkim
    chown opendkim:opendkim /etc/opendkim.conf
    [[ $OSTYP == alpine ]] && mv /etc/opendkim.conf /etc/opendkim
    find /etc/opendkim -type d -exec chmod 700 {} +
    find /etc/opendkim -type f -exec chmod 600 {} +
fi

DOMAIN=${2:-''}
SELECT=${3:-'mail'}
KEYLEN=${4:-'2048'}

DNSTXT="/etc/opendkim/dnstxt/$SELECT._domainkey.$DOMAIN"
KFILES="/etc/opendkim/keyfiles/${SELECT}_${DOMAIN}.dkim"

ID="${RANDOM}${RANDOM}"

case $1 in
add)
    if [[ $DOMAIN ]]; then
        [[ -f "$DNSTXT" ]] && echo "DKIM key for $DOMAIN already exists" && exit 3
        [[ ! -f ~/.vhosts/$DOMAIN ]] && echo "Warning: '~/.vhosts/$DOMAIN' does not exist"
        opendkim-genkey -b $KEYLEN -S -a -r -s "$SELECT" -d "$DOMAIN" -D /tmp/
        [[ $? -gt 0 ]] && exit 1
        mv "/tmp/$SELECT.txt" "$DNSTXT"
        mv "/tmp/$SELECT.private" "$KFILES"
        sed -i "s/ ; ----- DKIM key $SELECT for $DOMAIN//g" "$DNSTXT"
        # This may need to be adjusted for HCP access
        #        chown $WUGID:opendkim /etc/opendkim/dnstxt/*
        chown opendkim:opendkim "$KFILES" "$DNSTXT"
        chmod 600 "$KFILES" "$DNSTXT"
        echo "$ID     $DOMAIN:$SELECT:$KFILES" >>/etc/opendkim/KeyTable
        echo "*@$DOMAIN       $ID" >>/etc/opendkim/SigningTable
        echo "$DOMAIN" >>/etc/opendkim/TrustedHosts
        echo "*.$DOMAIN" >>/etc/opendkim/TrustedHosts
        sc restart opendkim
        echo "Added DKIM keys for $DOMAIN using a selector of '$SELECT' and a key length of $KEYLEN"
    fi
    ;;
del)
    if [[ $DOMAIN ]]; then
        [[ ! -f "$DNSTXT" ]] && echo "DKIM key for $DOMAIN does not exist" && exit 5
        rm "$DNSTXT" 2>/dev/null
        rm "$KFILES" 2>/dev/null
        DELID=$(grep -i "${SELECT}_${DOMAIN}.dkim" /etc/opendkim/KeyTable | awk '{ print $1 }')
        sed -i "/$DELID/d" /etc/opendkim/KeyTable 2>/dev/null
        sed -i "/$DELID/d" /etc/opendkim/SigningTable 2>/dev/null
        sed -i "/${DOMAIN}$/d" /etc/opendkim/TrustedHosts 2>/dev/null
        sc restart opendkim
        echo "Removed DKIM key for $DOMAIN"
    fi
    ;;
list)
    /bin/ls -1 /etc/opendkim/dnstxt/ | sort
    ;;
show)
    if [[ $DOMAIN ]]; then
        /bin/ls $DNSTXT >/dev/null 2>&1
        if [[ $? -eq 0 ]]; then
            cat $DNSTXT | tr -d '\t\n\r"()' | sed 's/\.INTXT//' | awk '{print $1"\n"$2$3$4$5$6$7$8$9}'
        else
            echo "No match for '$DOMAIN'"
        fi
    else
        for list in $(ls "/etc/opendkim/dnstxt/" 2>/dev/null); do
            cat /etc/opendkim/dnstxt/$list | tr -d '\t\n\r"()' | sed 's/\.INTXT//' | awk '{print $1"\n"$2$3$4$5$6$7$8$9}'
        done
    fi
    ;;
esac
