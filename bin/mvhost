#!/usr/bin/env bash
# .sh/bin/mvhost 20190602 - 20200330
# Copyright (C) 1995-2022 Mark Constable <markc@renta.net> (AGPL-3.0)

# Requires "rhost" (remote ssh host) to be defined in ~/.ssh/config

[[ -z $2 || $1 =~ -h ]] && echo "Usage: mvhost domain rhost" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

[[ $DEBUG ]] && set -x

VHOST=$1
RHOST=$2

if [[ ! -f /root/.vhosts/$VHOST ]]; then
    addvhost $VHOST
fi

. /root/.vhosts/$VHOST || exit

if [[ $(mysql -BNe "SHOW DATABASES LIKE '$DNAME'") ]]; then
    echo "Warning: '$DNAME' database already exists"
else
    ISSQL=$(ssh $RHOST "mysql -BNe \"SHOW DATABASES LIKE '$DNAME'\"")
    if [[ $ISSQL == $DNAME ]]; then
        ssh $RHOST "mysqldump $DNAME > $UPATH/var/$DNAME.sql"
        echo "Create: $DNAME database"
        mysql -e "CREATE DATABASE IF NOT EXISTS $DNAME"
        mysql -e "GRANT ALL PRIVILEGES ON $DNAME.* TO '$DUSER'@'localhost' IDENTIFIED BY '$DPASS'"
        mysql -e "FLUSH PRIVILEGES"
    else
        echo "Warning: no remote database called '$DNAME'"
    fi
fi

if [[ -d $UPATH ]]; then
    ISPTH=$(ssh $RHOST "/bin/ls -d $UPATH")
    if [[ $ISPTH == $UPATH ]]; then
        rsync -vrltD $RHOST:$UPATH/ $UPATH --del
        chperms $VHOST
    else
        echo "Warning: no remote path called $RHOST:$UPATH"
    fi
else
    echo "Warning: no local $UPATH, 'addvhost $VHOST' first"
fi

if [[ -f $UPATH/var/$DNAME.sql ]]; then
    echo "Update: $UPATH/var/$DNAME.sql"
    cat $UPATH/var/$DNAME.sql | mysql $DNAME
    mv $UPATH/var/$DNAME.sql $UPATH/var/$(date +"%Y%m%d")-$DNAME.sql
else
    echo "Warning: $UPATH/var/$DNAME.sql does not exist"
fi

if [[ -f $WPATH/html/wp-config.php ]]; then
    if [[ ! -f $WPATH/html/wp-config.php.bkp ]]; then
        echo "Update: $WPATH/html/wp-config.php"
        su - $UUSER -c "
cd $WPATH/html
mv wp-config.php wp-config.php.bkp
wp core config --dbname='$DNAME' --dbuser='$DUSER' --dbpass='$DPASS'
chmod 640 wp-config.php
"
    fi
else
    echo "Warning: $WPATH/html/wp-config.php does not exist"
fi

[[ $DEBUG ]] && set -x
