#!/usr/bin/env bash
# .sh/bin/setup-hcp 20170519 - 20220330
# Copyright (C) 1995-2022 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 =~ '-h' ]] && echo "Usage: setup-hcp [domain]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

MHOST=${1:-$(hostname -f | tr 'A-Z' 'a-z')}

. /root/.vhosts/$MHOST || exit 3

[[ $DEBUG ]] && set -x

if [[ -d $WPATH/html/hcp ]]; then
    echo "### $WPATH/html/hcp (HCP) already exists"
else
    echo "### Clone Netserva HCP to $WPATH/html/hcp"
    git clone https://github.com/netserva/hcp $WPATH/html/hcp >/dev/null 2>&1
    APASS_HASH=$(php -r "echo password_hash('$APASS', PASSWORD_DEFAULT);")
    cat <<EOS | $SQCMD
    INSERT INTO news VALUES
    (null, 'News Item 1', 'Lorem ipsum etc...', 'lib/uploads/Blank-300x150.png', 1, '2018-01-01 00:00:01', '2018-01-01 00:00:01'),
    (null, 'News Item 2', 'Lorem ipsum etc...', 'lib/uploads/Blank-300x150.png', 1, '2018-01-01 00:00:01', '2018-01-01 00:00:01');
    INSERT INTO accounts VALUES
    (null,1,0,1,'$AMAIL','System','Administrator','','',0,'','$APASS_HASH','2018-01-01 00:00:01','2018-01-01 00:00:01');
EOS
    if [[ -f $WPATH/html/hcp/.htpasswd ]]; then
        echo "### $WPATH/html/hcp/.htpasswd already exists"
    else
        HUSER=$(pwgen -sB 8 1)
        HPASS=$(pwgen -sB 8 1)
        echo "### Create $WPATH/html/hcp/.htpasswd $HUSER/$HPASS"
        htpasswd -b -c $WPATH/html/hcp/.htpasswd $HUSER $HPASS >/dev/null 2>&1
        echo "# HTTP auth for https://$MHOST/html/hcp -> $HUSER / $HPASS" >>~/.my.cnf
        cat <<EOS | tee -a /root/.vhosts/$MHOST.conf >/dev/null
HTTP Auth
=========

AdminWeb: https://$MHOST/hcp
Username: $HUSER
Password: $HPASS

EOS
    fi

    echo "### Create default $DTYPE entries"
    cat <<EOS | tee -a /root/.vhosts/$MHOST.conf >/dev/null
HCP Auth
=========

AdminWeb: https://$MHOST/hcp/?o=auth
Username: $AMAIL
Password: $APASS

EOS
fi

if [[ -f $WPATH/html/.well-known/autodiscover.php ]]; then
    echo "### $WPATH/html/.well-known/autodiscover.php already exists"
else
    echo "### Setup $WPATH/html/.well-known/autodiscover.php with $MHOST"
    [[ ! -d $WPATH/html/.well-known ]] && mkdir -p $WPATH/html/.well-known
    cp ~/.sh/etc/_.well-known_autodiscover.php $WPATH/html/.well-known/autodiscover.php
fi

# Even if SQLite is the default, this is so switching to MySQL has a chance
# of working when index.php db=>type is dynamically changed to "mysql".
if [[ -f $WPATH/html/hcp/lib/.ht_pw ]]; then
    echo "### $WPATH/html/hcp/lib/.ht_pw already exists"
else
    echo "### Create $WPATH/html/hcp/lib/.ht_pw"
    echo $DPASS >$WPATH/html/hcp/lib/.ht_pw
fi

if [[ -f $WPATH/html/hcp/lib/.ht_conf.php ]]; then
    echo "### $WPATH/html/hcp/lib/.ht_conf.php already exists"
else
    echo "### Create $WPATH/html/hcp/lib/.ht_conf.php for '$DTYPE' (edit to modify/extend)"
    TPDNS=
    TMPDB=
    if [[ $DTYPE == mysql ]]; then
        TMPDB="['type' => 'mysql', 'pass' => '$DPASS']"
        TPDNS="
    'dns' => [
        'db' => [
            'host'  => '127.0.0.1',
            'name'  => 'pdns',
            'pass'  => '$DPASS',
            'path'  => '',
            'port'  => '3306',
            'sock'  => '',
            'type'  => 'mysql',
            'user'  => 'sysadm',
        ],
    ]"
    elif [[ $DTYPE == sqlite ]]; then
        TMPDB="['type' => 'sqlite']"
        TPDNS="
    'dns' => [
        'db' => [
            'pass'  => '',
            'path'  => '/var/lib/sqlite/sysadm/pdns.db',
            'type'  => 'sqlite',
            'user'  => '',
        ],
    ]"
    fi
    [[ $TMPDB ]] && echo "<?php
return [
    'cfg' => ['email' => '$ADMIN@$VHOST'],
    'db' => $TMPDB,
    'out' => [
        'doc'   => '$VHOST',
        'head'  => '$VHOST',
        'foot'  => 'Copyright (C) ' . date('Y') . ' $VHOST',
    ],$TPDNS
];
" >$WPATH/html/hcp/lib/.ht_conf.php
fi

setup-pma $MHOST
setup-roundcube $MHOST
chperms $MHOST
serva restart web
serva restart mail
sleep 2

[[ $DEBUG ]] && set +x
