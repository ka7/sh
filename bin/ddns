#!/usr/bin/env bash
# .sh/bin/ddns 20180606 - 20181102
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

# This script needs to be on a 1 to 5 minute cron job and requires a
# a companion PHP script (dns script) to insert the values into pdns.
# Example cron job, APIKEY must match what's in the remote PHP script...
#
# ~ cat /etc/cron.d/ddns
# MAILTO=YOUR@EMAIL.ADDRESS
# */5 * * * * root /root/.sh/bin/ddns DOMAIN SUBDOMAIN APIKEY https://DNS_SERVER/hcp/lib/php/ddns.php username:password

[[ $1 =~ "-h" ]] &&
    echo "Usage: ddns [domain] [subdomain|''] [apikey] [dns script] [http auth(use:pw)] [email]" && exit 1

# Either pass the 6 values above or hardwire them below between the ''

DDNS_FOR=${1:-''} # Target client FQDN domainname
DDNS_SUB=${2:-''} # Optional subdomain (or use '')
DDNS_KEY=${3:-''} # API Key (must match ddns.php)
DDNS_URL=${4:-''} # Remote DNS server (ddns.php)
DDNS_USR=${5:-''} # HTTP auth username:password
DDNS_MSG=${6:-''} # Email address for messages (default admin@$DDNS_FOR)

OLDIP=

[[ -f /var/tmp/ip ]] && OLDIP=$(</var/tmp/ip)

NEWIP=$(curl -s https://canihazip.com/s)

[[ -z $NEWIP ]] && exit

echo $NEWIP | grep -qE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"

if [[ $? -gt 0 ]]; then
    echo "'$NEWIP' is not a valid IP (old IP is $OLDIP)"
elif [[ -z $OLDIP || $NEWIP != $OLDIP ]]; then
    echo $NEWIP >/var/tmp/ip
    [[ $DDNS_USR ]] && TMP_USR="-u $DDNS_USR" || TMP_USR=""
    [[ $DDNS_MSG ]] && TMP_MSG="&msg=$DDNS_MSG" || TMP_MSG=""
    curl -s $TMP_USR "$DDNS_URL?key=$DDNS_KEY&for=$DDNS_FOR&sub=$DDNS_SUB$TMP_MSG"
fi

#systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
