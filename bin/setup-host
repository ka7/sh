#!/usr/bin/env bash
# .sh/bin/setup-host 20170524 - 20221122
# Copyright (C) 1995-2022 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 =~ '-h' ]] && echo "Usage: setup-host [fqdn] [(mysql)|sqlite]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

. ~/.shrc

[[ $DEBUG ]] && set -x

VHOST=${1:-$VHOST}
DTYPE=${2:-$DTYPE}

if [[ $OSTYP == alpine ]]; then

    echo "### Install Alpine base packages"

    OSMIR=nl.alpinelinux.org
    OSREL=latest-stable
    V_PHP=8

    # Missing OpenDMARC and SpamProbe
    ALIST="bash bc bind-tools bogofilter busybox-static bridge-utils
ca-certificates curl db dovecot dovecot-lmtpd dovecot-pigeonhole-plugin
dovecot-sqlite ebtables fcgiwrap gawk git iputils jq msmtp msmtp mtr nano nginx
opendkim opendkim-utils pdns pdns-backend-sqlite3 php$V_PHP php$V_PHP-curl
php$V_PHP-fpm php$V_PHP-gd php$V_PHP-imap php$V_PHP-opcache php$V_PHP-pdo
php$V_PHP-pdo_sqlite php$V_PHP-pecl-redis php$V_PHP-phar php$V_PHP-posix
php$V_PHP-session php$V_PHP-simplexml php$V_PHP-zip postfix postfix-pcre
postfix-policyd-spf-perl postfix-sqlite pwgen redis rsync s-nail shadow sqlite
sudo wget which whois"

    MLIST="dovecot-mysql mariadb mariadb-client pdns-backend-mysql
php$V_PHP-pdo_mysql postfix-mysql"

    if [[ -f /etc/apk/repositories.orig ]]; then
        echo "### Exists /etc/apk/repositories.orig"
    else
        echo "### Update /etc/apk/repositories with $OSREL"
        mv /etc/apk/repositories /etc/apk/repositories.orig
        cat <<EOS >/etc/apk/repositories
https://$OSMIR/alpine/$OSREL/main
https://$OSMIR/alpine/$OSREL/testing
https://$OSMIR/alpine/$OSREL/community
EOS
        apk update && apk upgrade
        apk add $ALIST

        if [[ $DTYPE == mysql ]]; then
            echo "### Install mariabdb packages"
            apk add $MLIST
            /etc/init.d/mariadb setup
            rc-service mariadb start
        fi
    fi
    echo "### Create symlink to /usr/bin/php"
    cd /usr/bin && ln -s php$V_PHP php

elif [[ $OSTYP == manjaro ]]; then

    # Patch for Manjaro adding this system group as a user group (bad!)
    grep -q '^autologin:x:1000' /etc/group
    if [[ $? -eq 0 ]]; then
        groupmod -g 100 autologin
    fi

    if [[ -f /etc/pacman.d/mirrorlist.orig ]]; then
        echo "### Exists /etc/pacman.d/mirrorlist.orig"
    else
        echo "### Install Arch/Manjaro base packages"

        # Default List of required core Netserva Arch/Manjaro packages
        DLIST="bash bc bridge-utils dovecot inetutils s-nail busybox ca-certificates
curl db dovecot ebtables fcgiwrap gawk git iputils jq libxml2 mailgraph msmtp
mtr mutt nano net-tools nginx-mainline opendkim opendmarc pflogsumm php php-fpm
php-gd php-imap php-intl php-sqlite php-imagick php-redis perl-mail-spf
pigeonhole postfix postfix-lmdb postfix-pcre postfix-sqlite powerdns pwgen redis
rsync sqlite sudo time minizip wget which whois yay"

        # ? php-imap php-intl

        # Optional Mariadb List of packages
        MLIST="mariadb mariadb-clients postfix-mysql"

        mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.orig
        echo "### Normalize mirrorlist, use 'pacman-mirrors --geoip --api -B stable' to update"
        echo "Server = http://$OSMIR/$OSREL/\$repo/\$arch" > /etc/pacman.d/mirrorlist

        pacman -Syu >/dev/null 2>&1
        yes | pacman -S iptables-nft >/dev/null 2>&1
        pacman -S $DLIST --needed --noconfirm >/dev/null 2>&1

        if [[ $DTYPE == mysql ]]; then
            pacman -S $MLIST --needed --noconfirm >/dev/null 2>&1
            mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql >/dev/null 2>&1
            systemctl start mariadb
        fi
    fi

elif [[ $OSTYPE == ubuntu || $OSTYP == debian ]]; then

    echo "### Install Debian/Ubuntu base packages"

    if [[ $OSTYP == debian ]]; then
        OSMIR=${OSMIR:-'ftp.debian.org'}
        OSREL=${OSREL:-'bullseye'}
    fi

    # Default List of required core Netserva Debian packages
    DLIST="apache2-utils apt-utils bash bc bind9-host bridge-utils bsd-mailx
busybox-static ca-certificates curl db5.3-util deborphan dnsutils dovecot-imapd
dovecot-lmtpd dovecot-managesieved dovecot-sqlite ebtables fcgiwrap gawk git
gnupg iptables iputils-ping jq libxml2-utils mailgraph msmtp mtr-tiny mutt nano
net-tools nginx-light opendkim opendkim-tools opendmarc openssh-server
pdns-backend-sqlite3 pflogsumm php$V_PHP php$V_PHP-bcmath php$V_PHP-curl
php$V_PHP-fpm php$V_PHP-gd php$V_PHP-gmp php$V_PHP-imap php$V_PHP-intl
php$V_PHP-mbstring php$V_PHP-soap php$V_PHP-sqlite3 php$V_PHP-xml php$V_PHP-zip
php-imagick php-redis postfix postfix-lmdb postfix-policyd-spf-perl
postfix-sqlite pwgen redis-server rsyslog rsync sqlite3 sudo time unzip wget
whois"

    # Mysql List of packages (not need if using SQLite)
    MLIST="dovecot-mysql mariadb-common mariadb-client mariadb-server
pdns-backend-mysql php$V_PHP-mysql postfix-mysql"

# no longer needed
#    [[ $OSREL == focal ]] && MLIST="$MLIST mariadb-client-10.3 mariadb-server-10.3"

    # Remove List of packages (RLIST="" to ignore removal)
    RLIST="*golang* *python* accountsservice apache2 at bind9 cloud*
install-info lxcfs man* open-iscsi rpcbind sasl2-bin ttf-*
ubuntu-advantage-tools vi* xinetd"

    # Make sure that IP4 is the default
    grep -q '^#precedence ::ffff:0:0/96  100' /etc/gai.conf
    if [[ $? -eq 0 ]]; then
        echo "### Warning: giving preference to IPv4 (IPv6 is Ubuntu default)"
        sed -i 's;#precedence ::ffff:0:0/96  100;precedence ::ffff:0:0/96  100;' /etc/gai.conf
    fi

    if [[ -f /etc/apt/apt.conf.d/20local ]]; then
        echo "### Exists /etc/apt/apt.conf.d/20local"
    else
        echo "### Create /etc/apt/apt.conf.d/20local"
        cp ~/.sh/etc/_etc_apt_apt.conf.d_20local /etc/apt/apt.conf.d/20local
    fi

    if [[ -f /etc/apt/sources.list.orig ]]; then
        echo "Exists /etc/apt/sources.list.orig"
    else
        export DEBIAN_FRONTEND=noninteractive
        export TERM=linux

        echo "### Setup apt sources list for $OSREL"
        mv /etc/apt/sources.list /etc/apt/sources.list.orig
        if [[ $OSTYP == debian ]]; then
            cat <<EOS >/etc/apt/sources.list
deb http://$OSMIR/debian/ $OSREL main
deb http://$OSMIR/debian/ $OSREL-updates main
deb http://security.debian.org/debian-security $OSREL/updates main
EOS
        else
            sed ~/.sh/etc/_etc_apt_sources.list \
                -e "s/_OSMIR/$OSMIR/" -e "s/_OSREL/$OSREL/" >/etc/apt/sources.list
        fi

        cat <<EOS | debconf-set-selections
postfix postfix/destinations string 'localhost'
postfix postfix/mailname string 'localhost'
postfix postfix/main_mailer_type string 'Internet Site'
EOS

#        echo "### Create key for bionic (18.04) repo"
#        apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 3B4FE6ACC0B21F32 >/dev/null 2>&1

        echo "### Create key for openlitespeed repo"
        apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 011AA62DEDA1F085 >/dev/null 2>&1

        echo "### Update package list for $OSREL, patience please..."
        apt-get -yqq update >/dev/null

        echo "### Upgrade packages for $OSREL, more patience..."
        apt-get -yqq -u dist-upgrade >/dev/null

        echo "### Install default package set, yet more patience..."
        apt-get -yqq install $DLIST >/dev/null

        if [[ $DTYPE == mysql ]]; then
            echo "### Install MYSQL package set, even more patience..."
            apt-get -yqq install $MLIST >/dev/null

            echo "### Change Mysql to utf8 otherwise pdns tables will not install"
            sed -i /etc/mysql/mariadb.conf.d/50-server.cnf \
                -e "/^character-set-server/ s/utf8mb4/utf8/" \
                -e "/^collation-server/ s/utf8mb4_general_ci/utf8_general_ci/"
        fi

        echo "### Disable pdns until actually needed"
        systemctl stop pdns >/dev/null 2>&1
        systemctl disable pdns >/dev/null 2>&1

#        echo "### Install bionic spamprobe (the focal+ spamprobe crashes)"
#        apt-get -yqq install spamprobe=1.4d-14build1 >/dev/null
#        apt-mark hold spamprobe >/dev/null
    fi

    if [[ -f /usr/bin/python3 && ! -d /usr/share/xsessions ]]; then
        if [[ -f /usr/share/unattended-upgrades/unattended-upgrade-shutdown ]]; then
            echo "### Remove unattended-upgrades"
            systemctl stop unattended-upgrades >/dev/null 2>&1
            systemctl disable unattended-upgrades >/dev/null 2>&1
        fi
        # Comment out if cloud-init is required otherwise this is the lazy way
        # to get rid of netplan so that systemd-networkd will work, especially
        # when a bridge is wanted via the LXDBR env var.
        echo "### Remove python and all related packages"
        apt-get -yqq --purge remove $RLIST >/dev/null
    fi

    # Let's make sure a few services are enabled
    systemctl enable systemd-networkd
    systemctl enable systemd-resolved
    systemctl enable mailgraph
fi

# Git is now available so install the SH scripts, if not already

if [[ -d ~/.sh ]]; then
    echo "### Exists ~/.sh"
else
    echo "### Setup  ~/.sh (NetServa SH scripts)"
    cd && git clone -q https://github.com/netserva/sh .sh
    ~/.sh/bin/shm install
    ~/.sh/bin/shm perms
    git config --global pull.rebase false
fi

. ~/.shrc

[[ ! -d $VPATH ]] && echo "### Create $VPATH" && mkdir -p $VPATH

if [[ -f /etc/ssh/sshd_config.orig ]]; then
    echo "### Exists /etc/ssh/sshd_config.orig"
else
    echo "### Create /etc/ssh/sshd_config"
    mv /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    cp ~/.sh/etc/_etc_ssh_sshd__config /etc/ssh/sshd_config
    systemctl restart sshd
fi

if [[ -d ~/.ssh ]]; then
    echo "### Exists ~/.ssh"
else
    echo "### Create ~/.ssh"
    mkdir ~/.ssh
    chmod 700 ~/.ssh
fi

if [[ -f ~/.ssh/config ]]; then
    echo "### Exists ~/.ssh/config"
else
    echo "### Create host ~/.ssh/config"
    cp ~/.sh/etc/_.ssh_config ~/.ssh/config
    chmod 600 ~/.ssh/*
fi

# If we are NOT on a systemd system (ie; Alpine)

if [[ $OSTYP == alpine ]]; then
    if [[ ! -f /etc/resolv.conf.orig ]]; then
        mv /etc/resolv.conf /etc/resolv.conf.orig
        echo "### Change /etc/resolv.conf to 1.1.1.1 (static)"
        cat <<EOS | tee /etc/resolv.conf >/dev/null
nameserver 1.1.1.1
nameserver 8.8.8.8
EOS
    fi
else
    [[ ! -d /etc/systemd/network ]] && mkdir /etc/systemd/network

#    if [[ $(ls -A /etc/systemd/network/*.network >/dev/null 2>&1) ]]; then
    if ls /etc/systemd/network/*.network > /dev/null; then
        echo "### Exists /etc/systemd/network/*.network"
    else
        if [[ -z $LXDBR ]]; then
            echo "### Create /etc/systemd/network/10-dhcp.network"
            cp ~/.sh/etc/_etc_systemd_network_10-dhcp.network /etc/systemd/network/10-dhcp.network
        else
            echo "### Create /etc/systemd/network/lxdbr config}"
            cp ~/.sh/etc/_etc_systemd_network_lxdbr.network /etc/systemd/network/lxdbr.network
            cp ~/.sh/etc/_etc_systemd_network_lxdbr.netdev /etc/systemd/network/lxdbr.netdev
            cp ~/.sh/etc/_etc_systemd_network_eth0.network /etc/systemd/network/eth0.network
        fi
        chmod 644 /etc/systemd/network/*
        systemctl restart systemd-networkd >/dev/null 2>&1
        systemctl enable systemd-networkd >/dev/null 2>&1
    fi

    if [[ /etc/resolv.conf -ef /run/systemd/resolve/stub-resolv.conf ]]; then
        echo "### Exists /etc/resolv.conf to 1.1.1.1 (systemd)"
    else
        echo "### Change /etc/resolv.conf to 1.1.1.1 (systemd)"
        cd /etc && rm resolv.conf && ln -s ../run/systemd/resolve/resolv.conf
        sed -i /etc/systemd/resolved.conf \
            -e 's/^#DNS=.*/DNS=1.1.1.1/' \
            -e 's/^#FallbackDNS=.*/FallbackDNS=8.8.8.8/' \
            -e "s/^#Domains=.*/Domains=$HDOMN/" \
            -e 's/^#MulticastDNS=.*/MulticastDNS=yes/'
        systemctl restart systemd-resolved >/dev/null 2>&1
        systemctl enable systemd-resolved >/dev/null 2>&1
    fi
fi

if [[ -f /etc/sysctl.d/50-nginx-tweaks.conf ]]; then
    echo "### Exists /etc/sysctl.d/50-nginx-tweaks.conf"
else
    echo "### Create /etc/sysctl.d/50-nginx-tweaks.conf"
    cat <<EOS >/etc/sysctl.d/50-nginx-tweaks.conf
# Auto created by NetServa HCP/SH on $(date +%Y%m%d)
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_notsent_lowat = 16384
vm.swappiness = 1
net.core.somaxconn = 512
EOS
    sysctl -p >/dev/null
fi

[[ $DEBUG ]] && set +x
