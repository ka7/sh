#!/usr/bin/env bash
# .sh/bin/setup-fqdn 20210327 - 20210330
# Copyright (C) 1995-2021 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 =~ '-h' ]] && echo "Usage: setup-fqdn [domain]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2
set -x
if [[ $1 ]]; then
    VHOST=$1
else
    HNAME=$(hostname)
    HNAME=${HNAME/%\.*/}
    HDOMN=$(hostname -d)
    [[ -z $HDOMN ]] && HDOMN='netserva.lan'
    VHOST=$HNAME.$HDOMN
fi

[[ ! -d ~/.vhosts ]] && mkdir ~/.vhosts

grep -q 'sysadm:1000' /etc/passwd
if [[ $? -eq 0 ]]; then
    echo "Default sysadm:1000 user already exists"
else
    echo "Remove default UID 1000 user"
    userdel -rf $(getent passwd 1000 | awk -F: '{print $1}')
    echo "Add vhost sysadm@mail.$VHOST"
    addvhost sysadm@mail.$VHOST
fi

. /root/.vhosts/mail.$VHOST

if [[ ! -f /etc/hosts.orig ]]; then
    cp /etc/hosts /etc/hosts.orig
    echo "Rewrite a sane /etc/hosts"
    sed -i "s/^127.0.1.1.*$/127.0.1.1\tresolved/" /etc/hosts

    grep -q "$IP4_0\t$MHOST $HNAME" /etc/hosts
    if [[ $? -gt 0 ]]; then
        echo -e "\n$IP4_0\t$MHOST $HNAME" >> /etc/hosts
    fi

    echo "Add domain search to /etc/resolv.conf"
    if [[ -e /usr/bin/systemctl ]]; then
        sed -i /etc/systemd/resolved.conf \
            -e "s/^#Domains=/Domains=$VHOST/"
        sc restart systemd-resolved
    else
        cat << EOS >> /etc/resolv.conf
search $VHOST
EOS
    fi
    echo $HNAME > /etc/hostname
    hostname $HNAME
    echo $MHOST > /etc/mailname
fi

echo "Update FQDN in $CSMTP/main.cf"
sed -i $CSMTP/main.cf \
    -e "s/_MHOST/$MHOST/" \
    -e "s/^#myhostname = _MHOST/myhostname = $MHOST/"

echo "Update FQDN in $CIMAP/dovecot.conf"
sed -i $CIMAP/dovecot.conf \
    -e "s/_MHOST/$MHOST/" \
    -e "s/_VHOST/$VHOST/"

if [[ $DTYPE == sqlite ]]; then

    echo "Update $CSMTP/sqlite-alias-maps.cf"
    sed -i $CSMTP/sqlite-alias-maps.cf \
        -e "s;_DPATH;$DPATH;"

    echo "Update $CSMTP/sqlite-gid-maps.cf"
    sed -i $CSMTP/sqlite-gid-maps.cf \
        -e "s;_DPATH;$DPATH;"

    echo "Update $CSMTP/sqlite-mailbox-domains.cf"
    sed -i $CSMTP/sqlite-mailbox-domains.cf \
        -e "s;_DPATH;$DPATH;"

    echo "Update $CSMTP/sqlite-mailbox-maps.cf"
    sed -i $CSMTP/sqlite-mailbox-maps.cf \
        -e "s;_DPATH;$DPATH;"

    echo "Update $CSMTP/sqlite-uid-maps.cf"
    sed -i $CSMTP/sqlite-uid-maps.cf \
        -e "s;_DPATH;$DPATH;"

    echo "Update $CIMAP/user-sqlite.conf"
    sed -i $CIMAP/user-sqlite.conf \
        -e "s;_DTYPE;$DTYPE;" \
        -e "s;_DPATH;$DPATH;"

    if [[ ! -f $C_DNS/pdns.d/sqlite.conf ]]; then
        echo "Create $C_DNS/pdns.d/sqlite.conf"
        cp ~/.sh/etc/_etc_powerdns_pdns_sqlite.conf $C_DNS/pdns.d/sqlite.conf
    fi

    grep -q virtual_alias_maps $CSMTP/main.cf
    if [[ $? -gt 0 ]]; then
        echo "Append SQLite details to $CSMTP/main.cf"
        cat ~/.sh/etc/_etc_postfix_main_sqlite.cf >> $CSMTP/main.cf
    fi

    grep -q passdb $CSMTP/main.cf
    if [[ $? -gt 0 ]]; then
        echo "Append SQLite details to $CIMAP/dovecot.conf"
        cat ~/.sh/etc/_etc_dovecot_dovecot.conf-sqlite >> $CIMAP/dovecot.conf
    fi

elif [[ $DTYPE == mysql ]]; then

    echo "Update $CSMTP/mysql-alias-maps.cf"
    sed -i $CSMTP/mysql-alias-maps.cf \
        -e "s/_DHOST/$DHOST/" \
        -e "s/_HDOMN/$ADMIN/" \
        -e "s/_DUSER/$ADMIN/" \
        -e "s/_DPASS/$DPASS/"

    echo "Update $CSMTP/mysql-mailbox-domains.cf"
    sed -i $CSMTP/mysql-mailbox-domains.cf \
        -e "s/_DHOST/$DHOST/" \
        -e "s/_HDOMN/$ADMIN/" \
        -e "s/_DUSER/$ADMIN/" \
        -e "s/_DPASS/$DPASS/"

    echo "Update $CSMTP/mysql-mailbox-maps.cf"
    sed -i $CSMTP/mysql-mailbox-maps.cf \
        -e "s/_DHOST/$DHOST/" \
        -e "s/_HDOMN/$ADMIN/" \
        -e "s/_DUSER/$ADMIN/" \
        -e "s/_DPASS/$DPASS/"

    echo "Update $CIMAP/user-mysql.conf"
    sed -i $CIMAP/user-mysql.conf
        -e "s/_DTYPE/$DTYPE/" \
        -e "s/_DHOST/$DHOST/" \
        -e "s/_HDOMN/$ADMIN/" \
        -e "s/_DUSER/$ADMIN/" \
        -e "s/_DPASS/$DPASS/"

    if [[ ! -f $C_DNS/pdns.d/mysql.conf ]]; then
        echo "Create $C_DNS/pdns.d/mysql.conf"
        cp ~/.sh/etc/_etc_powerdns_pdns_mysql.conf $C_DNS/pdns.d/mysql.conf
    fi

    echo "Update $C_DNS/pdns.d/mysql.conf"
    sed -i $C_DNS/pdns.d/mysql.conf \
        -e "s/_PDNS_USER/$DUSER/" \
        -e "s/_PDNS_PASS/$DPASS/"

    grep -q virtual_alias_maps $CSMTP/main.cf
    if [[ $? -gt 0 ]]; then
        echo "Append MySQL details to $CSMTP/main.cf"
        cat ~/.sh/etc/_etc_postfix_main_mysql.cf >> $CSMTP/main.cf
    fi

    grep -q passdb $CSMTP/main.cf
    if [[ $? -gt 0 ]]; then
        echo "Append MySQL details to $CIMAP/dovecot.conf"
        cat ~/.sh/etc/_etc_dovecot_dovecot.conf-mysql >> $CIMAP/dovecot.conf
    fi

else
    echo "Warning: Unknown DTYPE '$DTYPE'"
fi

echo "Update _MHOST in $C_WEB/sites-enabled/_default"
sed -i $C_WEB/sites-enabled/_default -e "s/_MHOST/$MHOST/g"

echo "Update 0.0.0.0 in $C_DNS/pdns.conf"
sed -i $C_DNS/pdns.conf -e "s/0\.0\.0\.0/$IP4_0/"

if [[ -f /etc/alpine-release ]]; then
    if [[ ! -f /etc/etc/periodic/daily/netserva ]]; then
        echo "Create /etc/etc/periodic/daily/netserva"
        cp ~/.sh/etc/_etc_cron.d_netserva /etc/etc/periodic/daily/netserva
        MTEMP=${MAILTO:-$AMAIL}
        sed -i "s/_MAILTO/$MTEMP/" /etc/etc/periodic/daily/netserva
    fi
else
    if [[ ! -f /etc/cron.d/netserva ]]; then
        echo "Create /etc/cron.d/netserva"
        cp ~/.sh/etc/_etc_cron.d_netserva /etc/cron.d/netserva
        MTEMP=${MAILTO:-$AMAIL}
        sed -i "s/_MAILTO/$MTEMP/" /etc/cron.d/netserva
    fi
fi

if [[ ! -d $C_SSL/$MHOST ]]; then
    echo "Create temporary self-signed certificate for $MHOST"
    [[ ! -d $C_SSL/$MHOST ]] && mkdir $C_SSL/$MHOST
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -subj "/C=$C/ST=$ST/L=$L/O=$O/OU=$OU/CN=$MHOST" \
        -keyout /etc/ssl/$MHOST/privkey.pem \
        -out /etc/ssl/$MHOST/fullchain.pem > /dev/null 2>&1

    if [[ ! -f $C_WEB/sites-enabled/$MHOST.selfsigned ]]; then
        cat << EOS | tee $C_WEB/sites-enabled/$MHOST.selfsigned > /dev/null
server {
    listen                      443 ssl http2;
    server_name                 $MHOST;
    set                         \$domain $MHOST;
    include                     /etc/nginx/hcp.conf;
    include                     /etc/nginx/common.conf;
    ssl_certificate             $C_SSL/$MHOST/fullchain.pem;
    ssl_certificate_key         $C_SSL/$MHOST/privkey.pem;
    ssl_stapling                off;
    ssl_stapling_verify         off;
}
EOS
    fi
fi

if [[ ! -f $CSMTP/vhosts/$MHOST ]]; then
    addvip $MHOST $IP4_0
fi

if [[ -f /etc/alpine-release ]]; then
    echo "TODO: restart alpine services"
else
    sc daemon-reload > /dev/null 2>&1

    sc restart ssh
    sc enable opendkim > /dev/null 2>&1
    sc restart opendkim
    sc enable opendmarc > /dev/null 2>&1
    sc restart opendmarc

    serva restart web
    serva restart mail
fi
