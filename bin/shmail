#!/usr/bin/env bash
# .sh/bin/shmail 20150529 - 20210523
# Copyright (C) 1995-2021 Mark Constable <markc@renta.net> (AGPL-3.0)
set -x
#VHOST=${_ARG1#*@} # userid @ $VHOST
#VUSER=${_ARG1%@*} # $VUSER @ domain

[[ -z $1 || $1 =~ '-h' ]] && echo "Usage: shmail email@|domain" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

_ARG1=${1,,} # lowercase user@domain
VPATH="/home/u"
VUSER='*'
VHOST='*'

if [[ $1 =~ "@" ]]; then
    VUSER="*${1%@*}*";
    VHOST="*${1#*@}*";
else
    VHOST="*$1*"
fi

HPATH="$VPATH/$VHOST/home"
MPATH="$HPATH/$VUSER/Maildir"

#_MNUM=$(/bin/ls -ld $MPATH > /dev/null 2>&1)
_MNUM=$(/bin/ls -ld $MPATH | wc -l) 2>/dev/null
#if [[ $? -gt 0 ]]; then
#    echo "ERROR: $MPATH does not exist"
#    exit 3
#fi

if [[ $_MNUM -gt 0 ]]; then
    echo "ERROR: $MPATH does not exist"
elif [[ $_MNUM -eq 1 ]]; then
    echo "Handle a single mailbox"
else
    echo "Handle multile mailboxes"
fi

exit

cd $MPATH/Maildir

find -maxdepth 2 -type d -name "new" -o -name "cur"|sort -f|xargs -0| (
    while read dir; do
        [[ -z $dir ]] && continue
        N1=0; N2=0; N1STR=""; N2STR=""
        cd "$dir"
        N1=$(du -s|cut -f1)
        N2=$(find -type f|wc -l)
        cd - > /dev/null
        NTOTAL=$(($NTOTAL+$N2))
        if [[ $N1 -lt 5 ]]; then
            N1STR=" "
        elif [[ $N1 -lt 1024 ]]; then
            N1STR="${N1}K"
        else
            N1STR=$(printf "%'9.3fG" $(echo $N1/1000000|bc -l))
        fi
        [[ $N2 -eq 0 ]] && N2STR=" " || N2STR=$N2
        printf "%-40s %6s %11s\n" "$(echo $dir|cut -c 3-)" "$N2STR" "$N1STR"
    done
    STOTAL=$(du -s $MPATH/Maildir|cut -f1)
    echo "-----------------------------------------------------------"
    printf "%-40s %6s %'10.3fG\n" Total $NTOTAL $(echo $STOTAL/1000000|bc -l)
    echo "-----------------------------------------------------------"
)

# OSTYP not available here
if [[ -f /etc/alpine-release ]]; then
    find . -type l
else
    find -L . -xtype l
fi

[ -d $MPATH/.spamprobe ] && du -h $MPATH/.spamprobe | awk '{printf "%-52s %6s\n", $2, $1}'
